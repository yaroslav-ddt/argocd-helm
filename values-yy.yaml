# Default values for argocd-helm.
ingress-nginx:
  namespace: ingress
  controller:
    replicaCount: 2
    service:
      enabled: true
      annotations: {service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: healthz}

certmanager:
  metadata:
    name: letsencrypt
  spec:
    acme:
      # staging https://acme-staging-v02.api.letsencrypt.org/directory 
      # production https://acme-v02.api.letsencrypt.org/directory  
      server: https://acme-v02.api.letsencrypt.org/directory
      email: yy@datainsights.de
      privateKeySecretRef:
        name: letsencrypt

argocd:
  domainname: argocdyy.jumpingcrab.com

oidc:
  # the names of clienId and clientSecret secrets in the key Vault
  clientID: argocd-sso-secret:oidc-azure-clientId
  clientSecret: argocd-sso-secret:oidc-azure-clientSecret
  requestedScopes:
       - openid
       - email

# argocd rbac
rbac:
  policy:
    csv: |
      p, role:ops, applications, *, */*, allow
      p, role:ops, logs, get, */*, allow
      p, role:ops, exec, create, */*, allow
      p, role:ops, clusters, get, *, allow
      p, role:ops, repositories, get, *, allow
      g, 736e6f41-ec48-48bc-a524-ff85d34a5b4d, role:admin
    default: role:readonly

tennantId: 703922c4-f042-4683-9e67-a969c8abc975

# Argo-workflows configurations
argoSSOAdmin:
  rbacRule: '"''Admin'' in groups"'

argo-workflows:
  server:
    ingress:
      hosts:
        - argo-workflowsyy.jumpingcrab.com
      tls:
      - secretName: argo-cert
        hosts:
          - argo-workflowsyy.jumpingcrab.com