---
# Source: argo-workflows/charts/argo-workflows/templates/server/server-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo
  namespace: "default"
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
---
# Source: argo-workflows/templates/argo-sso-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-sso-default
  annotations:
    workflows.argoproj.io/rbac-rule: "true"
    workflows.argoproj.io/rbac-rule-precedence: "0"
secrets:
  - name: argo-sso-default-token
---
# Source: argo-workflows/templates/argo-sso-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-sso-admin
  annotations:
    workflows.argoproj.io/rbac-rule: "'Admin' in groups"   #"'"'Admin' in groups"' in groups" # Has to be changed!!
    workflows.argoproj.io/rbac-rule-precedence: "100"
secrets:
  - name: argo-sso-admin-token
---
# Source: argo-workflows/templates/argo-sso-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-workflow
secrets:
  - name: argo-workflow-token
---
# Source: argo-workflows/templates/argo-sso-rbac.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: argo-sso-default-token
  annotations:
    kubernetes.io/service-account.name: argo-sso-default
---
# Source: argo-workflows/templates/argo-sso-rbac.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: argo-sso-admin-token
  annotations:
    kubernetes.io/service-account.name: argo-sso-admin
---
# Source: argo-workflows/templates/argo-sso-rbac.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: argo-workflow-token
  annotations:
    kubernetes.io/service-account.name: argo-workflow
---
# Source: argo-workflows/charts/argo-workflows/templates/controller/workflow-controller-config-map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: argo-workflow-controller-configmap
  namespace: "default"
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-cm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
data:
  config: |
    artifactRepository:
      s3:
        accessKeySecret:
          key: accesskey
          name: 
        secretKeySecret:
          key: secretkey
          name: 
        bucket: 
        endpoint: 
        insecure: false
    workflowDefaults:
      spec:
        serviceAccountName: argo
    sso:
      issuer: https://login.microsoftonline.com/703922c4-f042-4683-9e67-a969c8abc975/v2.0
      clientId:
        name: argo-sso-secret
        key: oidc-azure-clientId
      clientSecret:
        name: argo-sso-secret
        key: oidc-azure-clientSecret
      redirectUrl: https://argo-workflows.ignorelist.com/oauth2/callback
      rbac:
        enabled: true
      scopes: 
        - openid
        - email
      customGroupClaimName: roles
    nodeEvents:
      enabled: true
---
# Source: argo-workflows/charts/argo-workflows/templates/crds/argoproj.io_clusterworkflowtemplates.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterworkflowtemplates.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: ClusterWorkflowTemplate
    listKind: ClusterWorkflowTemplateList
    plural: clusterworkflowtemplates
    shortNames:
    - clusterwftmpl
    - cwft
    singular: clusterworkflowtemplate
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
---
# Source: argo-workflows/charts/argo-workflows/templates/crds/argoproj.io_cronworkflows.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: cronworkflows.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: CronWorkflow
    listKind: CronWorkflowList
    plural: cronworkflows
    shortNames:
    - cwf
    - cronwf
    singular: cronworkflow
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
---
# Source: argo-workflows/charts/argo-workflows/templates/crds/argoproj.io_workflowartifactgctasks.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workflowartifactgctasks.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: WorkflowArtifactGCTask
    listKind: WorkflowArtifactGCTaskList
    plural: workflowartifactgctasks
    shortNames:
      - wfat
    singular: workflowartifactgctask
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              type: string
            kind:
              type: string
            metadata:
              type: object
            spec:
              type: object
              x-kubernetes-map-type: atomic
              x-kubernetes-preserve-unknown-fields: true
            status:
              type: object
              x-kubernetes-map-type: atomic
              x-kubernetes-preserve-unknown-fields: true
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: argo-workflows/charts/argo-workflows/templates/crds/argoproj.io_workfloweventbindings.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workfloweventbindings.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: WorkflowEventBinding
    listKind: WorkflowEventBindingList
    plural: workfloweventbindings
    shortNames:
    - wfeb
    singular: workfloweventbinding
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
---
# Source: argo-workflows/charts/argo-workflows/templates/crds/argoproj.io_workflows.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workflows.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: Workflow
    listKind: WorkflowList
    plural: workflows
    shortNames:
    - wf
    singular: workflow
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Status of the workflow
      jsonPath: .status.phase
      name: Status
      type: string
    - description: When the workflow was started
      format: date-time
      jsonPath: .status.startedAt
      name: Age
      type: date
    - description: Human readable message indicating details about why the workflow
        is in this condition.
      jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: argo-workflows/charts/argo-workflows/templates/crds/argoproj.io_workflowtaskresults.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workflowtaskresults.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: WorkflowTaskResult
    listKind: WorkflowTaskResultList
    plural: workflowtaskresults
    singular: workflowtaskresult
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          message:
            type: string
          metadata:
            type: object
          outputs:
            properties:
              artifacts:
                items:
                  properties:
                    archive:
                      properties:
                        none:
                          type: object
                        tar:
                          properties:
                            compressionLevel:
                              format: int32
                              type: integer
                          type: object
                        zip:
                          type: object
                      type: object
                    archiveLogs:
                      type: boolean
                    artifactGC:
                      properties:
                        podMetadata:
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                        serviceAccountName:
                          type: string
                        strategy:
                          enum:
                          - ""
                          - OnWorkflowCompletion
                          - OnWorkflowDeletion
                          - Never
                          type: string
                      type: object
                    artifactory:
                      properties:
                        passwordSecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        url:
                          type: string
                        usernameSecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                      required:
                      - url
                      type: object
                    azure:
                      properties:
                        accountKeySecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        blob:
                          type: string
                        container:
                          type: string
                        endpoint:
                          type: string
                        useSDKCreds:
                          type: boolean
                      required:
                      - blob
                      - container
                      - endpoint
                      type: object
                    deleted:
                      type: boolean
                    from:
                      type: string
                    fromExpression:
                      type: string
                    gcs:
                      properties:
                        bucket:
                          type: string
                        key:
                          type: string
                        serviceAccountKeySecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                      required:
                      - key
                      type: object
                    git:
                      properties:
                        branch:
                          type: string
                        depth:
                          format: int64
                          type: integer
                        disableSubmodules:
                          type: boolean
                        fetch:
                          items:
                            type: string
                          type: array
                        insecureIgnoreHostKey:
                          type: boolean
                        passwordSecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        repo:
                          type: string
                        revision:
                          type: string
                        singleBranch:
                          type: boolean
                        sshPrivateKeySecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        usernameSecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                      required:
                      - repo
                      type: object
                    globalName:
                      type: string
                    hdfs:
                      properties:
                        addresses:
                          items:
                            type: string
                          type: array
                        force:
                          type: boolean
                        hdfsUser:
                          type: string
                        krbCCacheSecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        krbConfigConfigMap:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        krbKeytabSecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        krbRealm:
                          type: string
                        krbServicePrincipalName:
                          type: string
                        krbUsername:
                          type: string
                        path:
                          type: string
                      required:
                      - path
                      type: object
                    http:
                      properties:
                        auth:
                          properties:
                            basicAuth:
                              properties:
                                passwordSecret:
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                usernameSecret:
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            clientCert:
                              properties:
                                clientCertSecret:
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                clientKeySecret:
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            oauth2:
                              properties:
                                clientIDSecret:
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                clientSecretSecret:
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                endpointParams:
                                  items:
                                    properties:
                                      key:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - key
                                    type: object
                                  type: array
                                scopes:
                                  items:
                                    type: string
                                  type: array
                                tokenURLSecret:
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                        headers:
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        url:
                          type: string
                      required:
                      - url
                      type: object
                    mode:
                      format: int32
                      type: integer
                    name:
                      type: string
                    optional:
                      type: boolean
                    oss:
                      properties:
                        accessKeySecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        bucket:
                          type: string
                        createBucketIfNotPresent:
                          type: boolean
                        endpoint:
                          type: string
                        key:
                          type: string
                        lifecycleRule:
                          properties:
                            markDeletionAfterDays:
                              format: int32
                              type: integer
                            markInfrequentAccessAfterDays:
                              format: int32
                              type: integer
                          type: object
                        secretKeySecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        securityToken:
                          type: string
                      required:
                      - key
                      type: object
                    path:
                      type: string
                    raw:
                      properties:
                        data:
                          type: string
                      required:
                      - data
                      type: object
                    recurseMode:
                      type: boolean
                    s3:
                      properties:
                        accessKeySecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        bucket:
                          type: string
                        createBucketIfNotPresent:
                          properties:
                            objectLocking:
                              type: boolean
                          type: object
                        encryptionOptions:
                          properties:
                            enableEncryption:
                              type: boolean
                            kmsEncryptionContext:
                              type: string
                            kmsKeyId:
                              type: string
                            serverSideCustomerKeySecret:
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        endpoint:
                          type: string
                        insecure:
                          type: boolean
                        key:
                          type: string
                        region:
                          type: string
                        roleARN:
                          type: string
                        secretKeySecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        useSDKCreds:
                          type: boolean
                      type: object
                    subPath:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              exitCode:
                type: string
              parameters:
                items:
                  properties:
                    default:
                      type: string
                    description:
                      type: string
                    enum:
                      items:
                        type: string
                      type: array
                    globalName:
                      type: string
                    name:
                      type: string
                    value:
                      type: string
                    valueFrom:
                      properties:
                        configMapKeyRef:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        default:
                          type: string
                        event:
                          type: string
                        expression:
                          type: string
                        jqFilter:
                          type: string
                        jsonPath:
                          type: string
                        parameter:
                          type: string
                        path:
                          type: string
                        supplied:
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              result:
                type: string
            type: object
          phase:
            type: string
          progress:
            type: string
        required:
        - metadata
        type: object
    served: true
    storage: true
---
# Source: argo-workflows/charts/argo-workflows/templates/crds/argoproj.io_workflowtasksets.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workflowtasksets.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: WorkflowTaskSet
    listKind: WorkflowTaskSetList
    plural: workflowtasksets
    shortNames:
    - wfts
    singular: workflowtaskset
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: argo-workflows/charts/argo-workflows/templates/crds/argoproj.io_workflowtemplates.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workflowtemplates.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: WorkflowTemplate
    listKind: WorkflowTemplateList
    plural: workflowtemplates
    shortNames:
    - wftmpl
    singular: workflowtemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
---
# Source: argo-workflows/charts/argo-workflows/templates/controller/workflow-aggregate-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-view
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workfloweventbindings
  - workfloweventbindings/finalizers
  - workflowtemplates
  - workflowtemplates/finalizers
  - cronworkflows
  - cronworkflows/finalizers
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  verbs:
  - get
  - list
  - watch
---
# Source: argo-workflows/charts/argo-workflows/templates/controller/workflow-aggregate-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-edit
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workfloweventbindings
  - workfloweventbindings/finalizers
  - workflowtemplates
  - workflowtemplates/finalizers
  - cronworkflows
  - cronworkflows/finalizers
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
# Source: argo-workflows/charts/argo-workflows/templates/controller/workflow-aggregate-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-admin
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workfloweventbindings
  - workfloweventbindings/finalizers
  - workflowtasksets
  - workflowtasksets/finalizers
  - workflowtemplates
  - workflowtemplates/finalizers
  - cronworkflows
  - cronworkflows/finalizers
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
# Source: argo-workflows/charts/argo-workflows/templates/controller/workflow-controller-cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-workflow-controller
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumeclaims/finalizers
  verbs:
  - create
  - update
  - delete
  - get
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workflowtasksets
  - workflowtasksets/finalizers
  - workflowartifactgctasks
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
  - create
- apiGroups:
  - argoproj.io
  resources:
  - workflowtemplates
  - workflowtemplates/finalizers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - workflowtaskresults
  - workflowtaskresults/finalizers
  verbs:
  - list
  - watch
  - deletecollection
- apiGroups:
  - argoproj.io
  resources:
  - cronworkflows
  - cronworkflows/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
- apiGroups:
  - "policy"
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - get
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  resourceNames:
  - workflow-controller
  - workflow-controller-lease
  verbs:
  - get
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  resourceNames:
  
  - argo-workflows-agent-ca-certificates
---
# Source: argo-workflows/charts/argo-workflows/templates/controller/workflow-controller-cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-workflow-controller-cluster-template
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
rules:
- apiGroups:
  - argoproj.io
  resources:
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  verbs:
  - get
  - list
  - watch
---
# Source: argo-workflows/charts/argo-workflows/templates/server/server-cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-server
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  resourceNames:
  - sso
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - watch
  - create
  - patch
- apiGroups:
    - argoproj.io
  resources:
    - eventsources
    - sensors
    - workflows
    - workfloweventbindings
    - workflowtemplates
    - cronworkflows
  verbs:
    - create
    - get
    - list
    - watch
    - update
    - patch
    - delete
---
# Source: argo-workflows/charts/argo-workflows/templates/server/server-cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-server-cluster-template
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
rules:
- apiGroups:
  - argoproj.io
  resources:
  - clusterworkflowtemplates
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: argo-workflows/templates/argo-sso-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-sso-default-cluster-role
rules:
- apiGroups:
  - argoproj.io
  resources:
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  verbs:
  - get
  - list
  - watch
---
# Source: argo-workflows/templates/argo-sso-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-sso-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/log
  - secrets
  verbs:
  - get
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workflowtasksets
  - workflowtasksets/finalizers
  - workflowtemplates
  - workflowtemplates/finalizers
  - cronworkflows
  - cronworkflows/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - argoproj.io
  resources:
  - eventsources
  - sensors
  - workfloweventbindings
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - get
  - delete
---
# Source: argo-workflows/templates/argo-sso-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-workflow-executor-role
# https://argoproj.github.io/argo-workflows/workflow-rbac/
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflowtaskresults
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
---
# Source: argo-workflows/templates/argo-sso-rbac.yaml
# Additional Role for Admins to access secrets from all namespaces. This is needed to access logs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-secrets-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
---
# Source: argo-workflows/charts/argo-workflows/templates/controller/workflow-controller-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-workflow-controller
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-workflow-controller
subjects:
  - kind: ServiceAccount
    name: argo-workflow
    namespace: "default"
---
# Source: argo-workflows/charts/argo-workflows/templates/controller/workflow-controller-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-workflow-controller-cluster-template
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-workflow-controller-cluster-template
subjects:
  - kind: ServiceAccount
    name: argo-workflow
    namespace: "default"
---
# Source: argo-workflows/charts/argo-workflows/templates/server/server-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-server
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-server
subjects:
- kind: ServiceAccount
  name: argo
  namespace: "default"
---
# Source: argo-workflows/charts/argo-workflows/templates/server/server-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-server-cluster-template
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-server-cluster-template
subjects:
- kind: ServiceAccount
  name: argo
  namespace: "default"
---
# Source: argo-workflows/templates/argo-sso-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-sso-default-cluster-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-sso-default-cluster-role
subjects:
- kind: ServiceAccount
  name: argo-sso-default
  namespace: argo
---
# Source: argo-workflows/templates/argo-sso-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-sso-admin-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-admin
subjects:
- kind: ServiceAccount
  name: argo-sso-admin
  namespace: argo
---
# Source: argo-workflows/templates/argo-sso-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-sso-admin-secret-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-secrets-role
subjects:
- kind: ServiceAccount
  name: argo-sso-admin
  namespace: argo
---
# Source: argo-workflows/charts/argo-workflows/templates/controller/workflow-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo-workflow
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
  namespace: argo
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - patch
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs:
      - create
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtaskresults
    verbs:
      - create
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtasksets
      - workflowartifactgctasks
    verbs:
      - list
      - watch
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtasksets/status
      - workflowartifactgctasks/status
    verbs:
      - patch
---
# Source: argo-workflows/charts/argo-workflows/templates/controller/workflow-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo-workflow
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - patch
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs:
      - create
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtaskresults
    verbs:
      - create
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtasksets
      - workflowartifactgctasks
    verbs:
      - list
      - watch
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtasksets/status
      - workflowartifactgctasks/status
    verbs:
      - patch
---
# Source: argo-workflows/charts/argo-workflows/templates/controller/workflow-rb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-workflow
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
  namespace: argo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-workflow
subjects:
  - kind: ServiceAccount
    name: argo
    namespace: argo
---
# Source: argo-workflows/charts/argo-workflows/templates/controller/workflow-rb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-workflow
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-workflow
subjects:
  - kind: ServiceAccount
    name: argo
    namespace: default
---
# Source: argo-workflows/templates/argo-sso-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-workflow-executor-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-workflow-executor-role
subjects:
- kind: ServiceAccount
  name: argo-workflow
---
# Source: argo-workflows/charts/argo-workflows/templates/server/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: argo-server
  namespace: "default"
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    app.kubernetes.io/version: "v3.4.7"
spec:
  ports:
  - port: 2746
    targetPort: 2746
  selector:
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
  sessionAffinity: None
  type: ClusterIP
---
# Source: argo-workflows/charts/argo-workflows/templates/controller/workflow-controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-workflow-controller
  namespace: "default"
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    app.kubernetes.io/version: "v3.4.7"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-workflows-workflow-controller
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: argo-workflows-0.26.5
        app.kubernetes.io/name: argo-workflows-workflow-controller
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: workflow-controller
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: argo-workflows
        app.kubernetes.io/version: "v3.4.7"
    spec:
      serviceAccountName: argo-workflow
      containers:
        - name: controller
          image: "quay.io/argoproj/workflow-controller:v3.4.7"
          imagePullPolicy: Always
          command: [ "workflow-controller" ]
          args:
          - "--configmap"
          - "argo-workflow-controller-configmap"
          - "--executor-image"
          - "quay.io/argoproj/argoexec:v3.4.7"
          - "--loglevel"
          - "info"
          - "--gloglevel"
          - "0"
          - "--log-format"
          - "text"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          env:
            - name: ARGO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: LEADER_ELECTION_IDENTITY
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          resources:
            {}
          ports:
            - name: metrics
              containerPort: 9090
            - containerPort: 6060
          livenessProbe: 
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 6060
            initialDelaySeconds: 90
            periodSeconds: 60
            timeoutSeconds: 30
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: argo-workflows/charts/argo-workflows/templates/server/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-server
  namespace: "default"
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    app.kubernetes.io/version: "v3.4.7"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-workflows-server
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: argo-workflows-0.26.5
        app.kubernetes.io/name: argo-workflows-server
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: server
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: argo-workflows
        app.kubernetes.io/version: "v3.4.7"
    spec:
      serviceAccountName: argo
      containers:
        - name: argo-server
          image: "quay.io/argoproj/argocli:v3.4.7"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
          args:
          - server
          - --configmap=argo-workflow-controller-configmap
          - --auth-mode
          - sso
          - --auth-mode
          - client
          - "--secure=true"
          - "--loglevel"
          - "info"
          - "--gloglevel"
          - "0"
          - "--log-format"
          - "text"
          ports:
          - name: web
            containerPort: 2746
          readinessProbe:
            httpGet:
              path: /
              port: 2746
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 20
          env:
            - name: IN_CLUSTER
              value: "true"
            - name: ARGO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: BASE_HREF
              value: "/"
            - name: SSO_DELEGATE_RBAC_TO_NAMESPACE
              value: "true"
          resources:
            {}
          volumeMounts:
          - name: tmp
            mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: argo-workflows/charts/argo-workflows/templates/server/server-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/backend-protocol: "https"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  name: argo-server
  namespace: "default"
  labels:
    helm.sh/chart: argo-workflows-0.26.5
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
spec:
  ingressClassName: nginx
  rules:
    - host: argo-workflows.ignorelist.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argo-server
                port:
                  number: 2746
  tls:
    - hosts:
      - argo-workflows.ignorelist.com
      secretName: argo-cert
